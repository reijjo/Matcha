:: OTHERS ::
FIX BORDER RENDERING



:: REGISTRATION ::
- EMAIL
- USERNAME
- LAST NAME
- FIRST NAME
- PASSWORD (PROTECTED)
- VERIFICATION EMAIL WITH UNIQUE LINK


:: SIGN-IN ::
- CONNECT WITH USERNAME AND PASSWORD
- FORGOT PASSWORD EMAIL FOR PASSWORD RE-INITIALIZATION
- LOGOUT FROM ANY PAGE OF SITE


:: USER PROFILE ::
• Once connected, a user must fill his or her profile, adding the following information:
	◦ The gender.
	◦ Sexual preferences.
	◦ A biography.
	◦ A list of interests with tags (ex: #vegan, #geek, #piercing etc...)
		◦ These tags must be reusable.
	◦ Pictures, max 5, including 1 as profile picture.
• User must be able to modify this info, including last name, first name and email address.
• The user must be able to check who looked at profile and who “liked” them.
• The user must have a public “fame rating”.
	• Up to you to define what “fame rating” means as long as your criteria are consistant.
• The user must be located using GPS positionning, up to his/her neighborhood.
	• If the user does not want to be positionned, you must find a way to locate him/he even without his/her knowledge.2 The user must be able to modify his/her GPS position in his/her profile.


:: BROWSING ::
- The user must be able to easily get a list of suggestions that match his/her profile.
	• You will only propose “interesting” profiles for example, only men for a heterosexual girls.
	• You must manage bisexuality.
	• If the orientation isn’t specified, the user will be considered bi-sexual.
	• You must cleverly match profiles:
		• MUST weight at least on several criterias, for example:
			◦ Same geographic area as the user.
			◦ With a maximum of common tags.
			◦ With a maximum “fame rating”
	• You must show in priority people from the same geographical area.
	• The list must be sortable by age, location, “fame rating” and common tags.
	• The list must be filterable by age, location, “fame rating” and common tags.


:: SEARCH // RESEARCH ::
- The user must be able to run an advanced research selecting one or a few criterias such as:
	• A age gap.
	• A “fame rating” gap.
	• A location.
	• One or multiple interests tags.
- As per the suggestion list, the resulting list must be sortable and filterable by age, location, “fame rating” and tags.


:: PROFILE OF OTHER USERS ::
- A user must be able to consult the profile of other users.
- Profiles must contain all the information available about them, except for the email address and the password.
- When a user consults a profile, it must appear in his/her visit history.
- The user must also be able to:
	• If he has at least one picture “like” another user.
		• When two people “like” each other, we will say that they are “connected” and are now able to chat.
		• If the current user does not have a picture, he/she cannot complete this action.
	• Check the “fame rating”.
	• See if the user is online, and if not see the date and time of the last connection.
	• Report the user as a “fake account”.
	• Block the user. A blocked user won’t appear anymore in the research results and won’t generate additional notifications.
- A user can clearly see if the consulted profile is connected or “like” his/her profile and must be able to “unlike” or be disconnected from that profile.


:: CHAT ::
- When two users are connected, they must be able to “chat” in real time.
	- We’ll tolerate a 10 secondes delay for messages.
- How you will implement the chat is totally up to you.
- The user must be able to see from any page if a new message is received.
	- We’ll tolerate a 10 secondes delay for notifications.


:: NOTIFICATIONS ::
- A user must be notified in real time of the following events:
	• The user received a “like”.
	• The user’s profile has been checked.
	• The user received a message.
	• A “liked” user “liked” back.
	• A connected user “unliked” you.
- We’ll tolerate a 10 secondes delay for notifications.
- A user must be able to see, from any page that a notification hasn’t been read.


:: SECURITY ::
- All your forms must have correct validations and the whole website must be secure.
- This part is mandatory and will be checked extensively in defense. To give you an idea, here are a few elements that are not considered secure:
◦ To have a “plain text” password stored in your database.
◦ To be able to inject HTML of “user” Javascript code in unprotected variables.
◦ To be able to upload unwanted content.
◦ To be able to alter a SQL request.
• Finally, the slightest security breach will give you 0.
	- You must at least manage what is indicated in the general instructions.
		- ie NOT have plain text passwords stored in your database
		- be protected against SQL injections
		- and have a validation of all the forms and upload.


:: DATABASE ::
- init.sql


:: BONUS ::
- If you need inspiration here are some ideas:
	• Add Omniauth strategies for the connection.
	• Import pictures from Facebook and/or Google+.
	• Create an interactive map of the users (which implies a more precise GPS localization via JavaScript).


Eliminatory instructions
• Your code cannot produce any errors, warnings or notices either from the server or the client side in the web console.
• Anything not specifically authorized is forbidden.
• Finally, the slightest security breach will give you 0.
	- You must at least manage what is indicated in the general instructions.
		- ie NOT have plain text passwords stored in your database
		- be protected against SQL injections
		- and have a validation of all the forms and upload.